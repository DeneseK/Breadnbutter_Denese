<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ToolTip1.Location" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="cmdCancel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAASdAAA
        EnQB3mYfeAAAANFJREFUWEftluEKhDAMg/f+L62eKIyxmi+2d3AwwV/LkjStm62t598S2Frbnt6v1aOE
        x/UyI65wqZFIPKrOxT+mlKlkZsRqSbX4zYdN9AbwpgOo5gVxVYrfghanBb4UVM8xJwZ2WSpxKwXXABX/
        mEDcCARjHwcOcSNQMO1qwhE3ATmx96YIt+zTW/GSGciIYwMR8GfiMwNZcav62aGRuZheiY+b0PQG32DK
        fGrz5KxQ58R03f3DcfHIlLrj1ToSISAllG0Z8XBilBFMtIArgSuBHUggJfeGqOCpAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="tmrClock.Location" type="System.Drawing.Point, System.Drawing">
    <value>105, 17</value>
  </data>
  <data name="ttmTime.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACFTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5BeEhvc3QrU3RhdGUBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAA/QEAAAIB
        AAAAAQAAAAAkAAAARkVEMjdCQzEtRkMyNi0xMWQyLUE5QkItMDA2MDA4QzBFMUZFAAAAAMQBAAAAAAEA
        OwoAACwCAABBFc8OIfvREa9AAGCXR2spAAABAAAAAgAPAACAA1LjC5GPzhGd4wCqAEu4UQEAAACQAURC
        AQANTVMgU2FucyBTZXJpZgAAEgAAgAAAAAAAABIAAABDAGEAcAB0AGkAbwBuADoAAAD//wNS4wuRj84R
        neMAqgBLuFEBAAAAkAFEQgEADU1TIFNhbnMgU2VyaWbBC+J3MgbSEbm6AGCXR2spAAABAD8AAAAKAAAA
        ewBGADIAfQAAAAIAAAAAAAIAAAAAAAIAAAAAAAIAAAAAAAoAAAB7AEYAMwB9AAAAAAAAAAAAAAAAAAAA
        AAAAAEMVzw4h+9ERr0AAYJdHaykAAAEAAAAAAP//AQAAAP//AAD//wAAAAABAAUAAIABAAAAAAAAABYA
        AABoAGgAOgBuAG4AIABBAE0AUABNAAAAAAD//wAACAAAgBYAAABoAGgAOgBuAG4AIABBAE0AUABNAAAA
        AAABAAMAAQABAAEAAQAdd0oH6//vPwAAAAAAAAAAAAAAAAAAAAAAAAQAAABfAAAAAAD//wAAAAAOAAAA
        XwBfADoAXwBfACAAAAAAAAEAAACF61G4HsXkPws=
</value>
  </data>
  <data name="tdtDate.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACFTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5BeEhvc3QrU3RhdGUBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAQwMAAAIB
        AAAAAQAAAAAkAAAARkVEMjdCQzEtRkMyNi0xMWQyLUE5QkItMDA2MDA4QzBFMUZFAAAAAAoDAAAAAAEA
        0gkAACwCAADl4Jyk+cDSEbDqAKAkaVgwAAABALQAqgABAAUAAIAIAACADwAAgAgAAIAFAACACAAAgBEA
        AID/AAAAAAD/AP8AAAACAAAAAAA4AAAAUwB1AG4ALABNAG8AbgAsAFQAdQBlACwAVwBlAGQALABUAGgA
        dQAsAEYAcgBpACwAUwBhAHQAAAASAAAAbQBtAG0AbQAgAHkAeQB5AAAAA1LjC5GPzhGd4wCqAEu4UQEA
        AACQAURCAQANTVMgU2FucyBTZXJpZgNS4wuRj84RneMAqgBLuFEBAAAAkAFEQgEADU1TIFNhbnMgU2Vy
        aWYDUuMLkY/OEZ3jAKoAS7hRAQAAAJABREIBAA1NUyBTYW5zIFNlcmlmAABBFc8OIfvREa9AAGCXR2sp
        AAABAAAAAgAPAACAA1LjC5GPzhGd4wCqAEu4UQEAAACQAURCAQANTVMgU2FucyBTZXJpZgAAEgAAgAAA
        AAAAABIAAABDAGEAcAB0AGkAbwBuADoAAAD//wNS4wuRj84RneMAqgBLuFEBAAAAkAFEQgEADU1TIFNh
        bnMgU2VyaWZEFc8OIfvREa9AAGCXR2spAAABAAEAAAABAMEL4ncyBtIRuboAYJdHaykAAAEAvwAAAAoA
        AAB7AEYAMgB9AAAAAgAAAAAAAgAAAAAAAgAAAAAAAgAAAAAACgAAAHsARgAzAH0AAAAKAAAAewBGADQA
        fQAAAAAAAAAAAAAAAAAAAAAAAABDFc8OIfvREa9AAGCXR2spAAABAAAAAAABAAEAAAABAAAAAQAAAAAA
        AQAFAACAAQAAAAAAAAAAABYAAABtAG0ALwBkAGQALwB5AHkAeQB5AAAAAAD//wAABAAIAACAFgAAAG0A
        bQAvAGQAZAAvAHkAeQB5AHkAAAAAAAMAAQABAAEAAQAAAACAQJJGQQAAAAA0ECTBAAAAAAAAAAAEAAAA
        XwAAAAAA//8AAAAAFgAAAF8AXwAvAF8AXwAvAF8AXwBfAF8AAAAAAAEAAAAY0V8EAAAAAAAACw==
</value>
  </data>
  <data name="Label3.Location" type="System.Drawing.Point, System.Drawing">
    <value>193, 17</value>
  </data>
</root>